package test;

import static org.testng.Assert.assertTrue;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.testng.Reporter;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;
import io.github.bonigarcia.wdm.WebDriverManager;

@Test
public class BasicValidation1 {

	public static WebDriver driver;
	String url = "https://www.facebook.com";

	@BeforeTest
	public void setup() {
	    WebDriverManager.chromedriver().setup(); // Auto-downloads ChromeDriver
	    
	    ChromeOptions options = new ChromeOptions();
	    driver = new ChromeDriver(options);
	    driver.manage().window().maximize();
	    driver.get(url);
	}

	@AfterTest
	public void tearDown() {
		if(driver != null) {
		driver.quit();
		}
	}

	public void welcomeMessageValidation() {
		String expectedResult = "Facebook helps you connect and share with share the people in the your life.";
		String actualResult = driver.findElement(By.xpath("//h2[@class='_8eso']")).getText();

		Reporter.log("expected result = " + expectedResult);
		Reporter.log("Actual Result  = " + actualResult);

		assertTrue(actualResult.equals(expectedResult), "Mismatch in the welcome message,");
	}

	public void emailTextBoxPlaceholderValidation() {
		String expectedResult = " Email address or phone number ";
		String actualResult = driver.findElement(By.id("email")).getDomAttribute("placeholder");

		Reporter.log("expected result = " + expectedResult);
		Reporter.log("Actual Result  = " + actualResult);

		assertTrue(actualResult.equals(expectedResult), "Mismatch in the email placeholder,");
	}

	public void passwordBoxPlaceholderValidation() {
		String expectedResult = " password ";
		String actualResult = driver.findElement(By.id("pass")).getDomAttribute("placeholder");

		Reporter.log("expected result = " + expectedResult);
		Reporter.log("Actual Result  = " + actualResult);

		assertTrue(actualResult.equals(expectedResult), "Mismatch in the password placeholder");
	}

}
